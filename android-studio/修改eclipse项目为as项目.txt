


https://www.jianshu.com/p/f215479c98f9


MyApplication：整个项目的根目录

settings.gradle：配置哪些文件夹是module，在这个示例项目中app文件夹就是一个module
build.grade：项目整体配置，包括maven库以及Android插件版本
gradle/：配置gradle版本
gradlew&gradlew.bat：unix和windows上的gradle包装命令，可以实现自动下载并使用gradle
gradle.properties：gradle配置文件，默认是空的，编译过程中可以从此文件中读取一些额外配置
local.properties：同gradle.properties一样也是gradle配置文件，默认只有本地sdk的路径，但不同的是通常会将跟本地有关的配置会放到这个文件中，比如本地一些依赖软件的路径以及敏感信息，因此通常需要将此文件在版本控制中忽略
app：app相关代码存放的目录，在settings.gradle文件中已经配置了此目录是一个module
app/libs：依赖库
app/src：源码，包括java源码清单文件以及各种资源
app/build.gradle：gradle编译脚本文件

在gradle中module就相当于eclipse中的project，
这样的好处就是gradle可以支持一个项目中有多个module，
并可以同时编译多个module，
对于比较复杂的项目来说这可是个杀手锏


接下来我们先在gradle项目的基础上将app目录改成eclispe结构

删除androidTest目录
将java目录下的所有文件移动到src目录下
将res目录移到app目录下
将AndroidManifest.xml移到app目录下
如果有assets目录，将assets目录移到app目录下
如果有jni目录将jni目录移到app目录下
如果有jniLibs目录将jniLibs目录下的内容移到libs目录下
app目录下的build.gradle文件中的android节点中通过sourceSets配置相关目录，如下：







然后当我们已经有了一个eclipse项目的时候该怎么做呢？

首先通过Android Studio创建一个项目
将eclipse项目拷贝进来（跟app目录同级）
在settings.gradle文件中配置一下，让其成为一个module
拷贝app目录下的build.gradle文件到到eclipse项目目录下
根据eclipse项目目录下的AndroidManifest.xml文件中的packageName、minSdkVersion修改build.gradle中的applicatoinId和minSdkVersion
如上图那样在build.gradle中配置sourceSets
删除app目录并在settings.gradle文件中中删除相应配置
打开Android Studio的设置页面，在Version Control中点击左下角的加号选择eclipse项目目录激活版本控制
在版本控制中配置忽略build.gradle文件、build目录、.idea目录以及*.iml文件
至此大功告成。





















